//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(ISOWebApps.DAL.KendaraanContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsed628b81e3696aad8fc9fd6a335a252ff9e60ade4e71413d28f8981e8fe38f03))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsed628b81e3696aad8fc9fd6a335a252ff9e60ade4e71413d28f8981e8fe38f03 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "ed628b81e3696aad8fc9fd6a335a252ff9e60ade4e71413d28f8981e8fe38f03"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Department")
            {
                return GetView0();
            }

            if (extentName == "KendaraanContext.Departments")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Jabatan")
            {
                return GetView2();
            }

            if (extentName == "KendaraanContext.Jabatans")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Karyawan")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.TrukKeluar")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.Kendaraan")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.LapService")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.ProblemKendaraan")
            {
                return GetView8();
            }

            if (extentName == "KendaraanContext.Karyawans")
            {
                return GetView9();
            }

            if (extentName == "KendaraanContext.TrukKeluars")
            {
                return GetView10();
            }

            if (extentName == "KendaraanContext.TrukKeluar_Karyawan")
            {
                return GetView11();
            }

            if (extentName == "KendaraanContext.Kendaraans")
            {
                return GetView12();
            }

            if (extentName == "KendaraanContext.LapServices")
            {
                return GetView13();
            }

            if (extentName == "KendaraanContext.ProblemKendaraan")
            {
                return GetView14();
            }

            if (extentName == "KendaraanContext.ProblemKendaraan_LapService")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.Section")
            {
                return GetView16();
            }

            if (extentName == "KendaraanContext.Sections")
            {
                return GetView17();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Department.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Department
        [CodeFirstDatabaseSchema.Department](T1.Department_ID, T1.Department_DepartmentDesc)
    FROM (
        SELECT 
            T.ID AS Department_ID, 
            T.DepartmentDesc AS Department_DepartmentDesc, 
            True AS _from0
        FROM KendaraanContext.Departments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.Departments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Departments
        [ISOWebApps.DAL.Department](T1.Department_ID, T1.Department_DepartmentDesc)
    FROM (
        SELECT 
            T.ID AS Department_ID, 
            T.DepartmentDesc AS Department_DepartmentDesc, 
            True AS _from0
        FROM CodeFirstDatabase.Department AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Jabatan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jabatan
        [CodeFirstDatabaseSchema.Jabatan](T1.Jabatan_ID, T1.Jabatan_JabatanDesc)
    FROM (
        SELECT 
            T.ID AS Jabatan_ID, 
            T.JabatanDesc AS Jabatan_JabatanDesc, 
            True AS _from0
        FROM KendaraanContext.Jabatans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.Jabatans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jabatans
        [ISOWebApps.DAL.Jabatan](T1.Jabatan_ID, T1.Jabatan_JabatanDesc)
    FROM (
        SELECT 
            T.ID AS Jabatan_ID, 
            T.JabatanDesc AS Jabatan_JabatanDesc, 
            True AS _from0
        FROM CodeFirstDatabase.Jabatan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Karyawan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Karyawan
        [CodeFirstDatabaseSchema.Karyawan](T1.Karyawan_ID, T1.Karyawan_NIK, T1.Karyawan_NamaKaryawan)
    FROM (
        SELECT 
            T.ID AS Karyawan_ID, 
            T.NIK AS Karyawan_NIK, 
            T.NamaKaryawan AS Karyawan_NamaKaryawan, 
            True AS _from0
        FROM KendaraanContext.Karyawans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TrukKeluar.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrukKeluar
        [CodeFirstDatabaseSchema.TrukKeluar](T3.TrukKeluar_ID, T3.TrukKeluar_TglReport, T3.TrukKeluar_KaryawanID, T3.TrukKeluar_KendaraanID, T3.TrukKeluar_Tujuan, T3.TrukKeluar_JenisMuatanBrkt, T3.TrukKeluar_TonMuatanBrkt, T3.TrukKeluar_JenisMuatanPlg, T3.TrukKeluar_TonMuatanPlg, T3.TrukKeluar_TglBerangkat, T3.TrukKeluar_TglPulang, T3.[TrukKeluar.Karyawan_ID])
    FROM (
        SELECT T1.TrukKeluar_ID, T1.TrukKeluar_TglReport, T1.TrukKeluar_KaryawanID, T1.TrukKeluar_KendaraanID, T1.TrukKeluar_Tujuan, T1.TrukKeluar_JenisMuatanBrkt, T1.TrukKeluar_TonMuatanBrkt, T1.TrukKeluar_JenisMuatanPlg, T1.TrukKeluar_TonMuatanPlg, T1.TrukKeluar_TglBerangkat, T1.TrukKeluar_TglPulang, T2.[TrukKeluar.Karyawan_ID], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.ID AS TrukKeluar_ID, 
                T.TglReport AS TrukKeluar_TglReport, 
                T.KaryawanID AS TrukKeluar_KaryawanID, 
                T.KendaraanID AS TrukKeluar_KendaraanID, 
                T.Tujuan AS TrukKeluar_Tujuan, 
                T.JenisMuatanBrkt AS TrukKeluar_JenisMuatanBrkt, 
                T.TonMuatanBrkt AS TrukKeluar_TonMuatanBrkt, 
                T.JenisMuatanPlg AS TrukKeluar_JenisMuatanPlg, 
                T.TonMuatanPlg AS TrukKeluar_TonMuatanPlg, 
                T.TglBerangkat AS TrukKeluar_TglBerangkat, 
                T.TglPulang AS TrukKeluar_TglPulang, 
                True AS _from0
            FROM KendaraanContext.TrukKeluars AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.TrukKeluar_Karyawan_Source).ID AS TrukKeluar_ID, 
                Key(T.TrukKeluar_Karyawan_Target).ID AS [TrukKeluar.Karyawan_ID], 
                True AS _from1
            FROM KendaraanContext.TrukKeluar_Karyawan AS T) AS T2
            ON T1.TrukKeluar_ID = T2.TrukKeluar_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Kendaraan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Kendaraan
        [CodeFirstDatabaseSchema.Kendaraan](T1.Kendaraan_ID, T1.Kendaraan_NoPol, T1.Kendaraan_TipeKendaraan)
    FROM (
        SELECT 
            T.ID AS Kendaraan_ID, 
            T.NoPol AS Kendaraan_NoPol, 
            T.TipeKendaraan AS Kendaraan_TipeKendaraan, 
            True AS _from0
        FROM KendaraanContext.Kendaraans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LapService.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LapService
        [CodeFirstDatabaseSchema.LapService](T1.LapService_LapServiceID, T1.LapService_KendaraanID, T1.LapService_Perkiraan, T1.LapService_Waktu, T1.LapService_Bengkel, T1.LapService_AlamatTelp, T1.LapService_Keterangan)
    FROM (
        SELECT 
            T.LapServiceID AS LapService_LapServiceID, 
            T.KendaraanID AS LapService_KendaraanID, 
            T.Perkiraan AS LapService_Perkiraan, 
            T.Waktu AS LapService_Waktu, 
            T.Bengkel AS LapService_Bengkel, 
            T.AlamatTelp AS LapService_AlamatTelp, 
            T.Keterangan AS LapService_Keterangan, 
            True AS _from0
        FROM KendaraanContext.LapServices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ProblemKendaraan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProblemKendaraan
        [CodeFirstDatabaseSchema.ProblemKendaraan](T3.ProblemKendaraan_ProblemKendaraanID, T3.ProblemKendaraan_Problem, T3.ProblemKendaraan_Status, T3.ProblemKendaraan_JadwalTunda, T3.ProblemKendaraan_TglDikerjakan, T3.ProblemKendaraan_Detail, T3.[ProblemKendaraan.LapService_LapServiceID])
    FROM (
        SELECT T1.ProblemKendaraan_ProblemKendaraanID, T1.ProblemKendaraan_Problem, T1.ProblemKendaraan_Status, T1.ProblemKendaraan_JadwalTunda, T1.ProblemKendaraan_TglDikerjakan, T1.ProblemKendaraan_Detail, T2.[ProblemKendaraan.LapService_LapServiceID], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.ProblemKendaraanID AS ProblemKendaraan_ProblemKendaraanID, 
                T.Problem AS ProblemKendaraan_Problem, 
                T.Status AS ProblemKendaraan_Status, 
                T.JadwalTunda AS ProblemKendaraan_JadwalTunda, 
                T.TglDikerjakan AS ProblemKendaraan_TglDikerjakan, 
                T.Detail AS ProblemKendaraan_Detail, 
                True AS _from0
            FROM KendaraanContext.ProblemKendaraan AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.ProblemKendaraan_LapService_Source).ProblemKendaraanID AS ProblemKendaraan_ProblemKendaraanID, 
                Key(T.ProblemKendaraan_LapService_Target).LapServiceID AS [ProblemKendaraan.LapService_LapServiceID], 
                True AS _from1
            FROM KendaraanContext.ProblemKendaraan_LapService AS T) AS T2
            ON T1.ProblemKendaraan_ProblemKendaraanID = T2.ProblemKendaraan_ProblemKendaraanID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.Karyawans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Karyawans
        [ISOWebApps.DAL.Karyawan](T1.Karyawan_ID, T1.Karyawan_NIK, T1.Karyawan_NamaKaryawan)
    FROM (
        SELECT 
            T.ID AS Karyawan_ID, 
            T.NIK AS Karyawan_NIK, 
            T.NamaKaryawan AS Karyawan_NamaKaryawan, 
            True AS _from0
        FROM CodeFirstDatabase.Karyawan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.TrukKeluars.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrukKeluars
        [ISOWebApps.DAL.TrukKeluar](T1.TrukKeluar_ID, T1.TrukKeluar_TglReport, T1.TrukKeluar_KaryawanID, T1.TrukKeluar_KendaraanID, T1.TrukKeluar_Tujuan, T1.TrukKeluar_JenisMuatanBrkt, T1.TrukKeluar_TonMuatanBrkt, T1.TrukKeluar_JenisMuatanPlg, T1.TrukKeluar_TonMuatanPlg, T1.TrukKeluar_TglBerangkat, T1.TrukKeluar_TglPulang) WITH 
        RELATIONSHIP(CREATEREF(KendaraanContext.Karyawans, ROW(T1.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target.ID]),[ISOWebApps.DAL.Karyawan]),[ISOWebApps.DAL.TrukKeluar_Karyawan],TrukKeluar_Karyawan_Source,TrukKeluar_Karyawan_Target) 
    FROM (
        SELECT 
            T.ID AS TrukKeluar_ID, 
            T.TglReport AS TrukKeluar_TglReport, 
            T.KaryawanID AS TrukKeluar_KaryawanID, 
            T.KendaraanID AS TrukKeluar_KendaraanID, 
            T.Tujuan AS TrukKeluar_Tujuan, 
            T.JenisMuatanBrkt AS TrukKeluar_JenisMuatanBrkt, 
            T.TonMuatanBrkt AS TrukKeluar_TonMuatanBrkt, 
            T.JenisMuatanPlg AS TrukKeluar_JenisMuatanPlg, 
            T.TonMuatanPlg AS TrukKeluar_TonMuatanPlg, 
            T.TglBerangkat AS TrukKeluar_TglBerangkat, 
            T.TglPulang AS TrukKeluar_TglPulang, 
            True AS _from0, 
            T.Karyawan_ID AS [TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target.ID]
        FROM CodeFirstDatabase.TrukKeluar AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.TrukKeluar_Karyawan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrukKeluar_Karyawan
        [ISOWebApps.DAL.TrukKeluar_Karyawan](T3.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Source], T3.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target])
    FROM (
        SELECT -- Constructing TrukKeluar_Karyawan_Source
            CreateRef(KendaraanContext.TrukKeluars, row(T2.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Source.ID]), [ISOWebApps.DAL.TrukKeluar]) AS [TrukKeluar_Karyawan.TrukKeluar_Karyawan_Source], 
            T2.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target]
        FROM (
            SELECT -- Constructing TrukKeluar_Karyawan_Target
                T1.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Source.ID], 
                CreateRef(KendaraanContext.Karyawans, row(T1.[TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target.ID]), [ISOWebApps.DAL.Karyawan]) AS [TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target]
            FROM (
                SELECT 
                    T.ID AS [TrukKeluar_Karyawan.TrukKeluar_Karyawan_Source.ID], 
                    T.Karyawan_ID AS [TrukKeluar_Karyawan.TrukKeluar_Karyawan_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.TrukKeluar AS T
                WHERE T.Karyawan_ID IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.Kendaraans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Kendaraans
        [ISOWebApps.DAL.Kendaraan](T1.Kendaraan_ID, T1.Kendaraan_NoPol, T1.Kendaraan_TipeKendaraan)
    FROM (
        SELECT 
            T.ID AS Kendaraan_ID, 
            T.NoPol AS Kendaraan_NoPol, 
            T.TipeKendaraan AS Kendaraan_TipeKendaraan, 
            True AS _from0
        FROM CodeFirstDatabase.Kendaraan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.LapServices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LapServices
        [ISOWebApps.DAL.LapService](T1.LapService_LapServiceID, T1.LapService_KendaraanID, T1.LapService_Perkiraan, T1.LapService_Waktu, T1.LapService_Bengkel, T1.LapService_AlamatTelp, T1.LapService_Keterangan)
    FROM (
        SELECT 
            T.LapServiceID AS LapService_LapServiceID, 
            T.KendaraanID AS LapService_KendaraanID, 
            T.Perkiraan AS LapService_Perkiraan, 
            T.Waktu AS LapService_Waktu, 
            T.Bengkel AS LapService_Bengkel, 
            T.AlamatTelp AS LapService_AlamatTelp, 
            T.Keterangan AS LapService_Keterangan, 
            True AS _from0
        FROM CodeFirstDatabase.LapService AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.ProblemKendaraan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProblemKendaraan
        [ISOWebApps.DAL.ProblemKendaraan](T1.ProblemKendaraan_ProblemKendaraanID, T1.ProblemKendaraan_Problem, T1.ProblemKendaraan_Status, T1.ProblemKendaraan_JadwalTunda, T1.ProblemKendaraan_TglDikerjakan, T1.ProblemKendaraan_Detail) WITH 
        RELATIONSHIP(CREATEREF(KendaraanContext.LapServices, ROW(T1.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID]),[ISOWebApps.DAL.LapService]),[ISOWebApps.DAL.ProblemKendaraan_LapService],ProblemKendaraan_LapService_Source,ProblemKendaraan_LapService_Target) 
    FROM (
        SELECT 
            T.ProblemKendaraanID AS ProblemKendaraan_ProblemKendaraanID, 
            T.Problem AS ProblemKendaraan_Problem, 
            T.Status AS ProblemKendaraan_Status, 
            T.JadwalTunda AS ProblemKendaraan_JadwalTunda, 
            T.TglDikerjakan AS ProblemKendaraan_TglDikerjakan, 
            T.Detail AS ProblemKendaraan_Detail, 
            True AS _from0, 
            T.LapService_LapServiceID AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID]
        FROM CodeFirstDatabase.ProblemKendaraan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.ProblemKendaraan_LapService.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProblemKendaraan_LapService
        [ISOWebApps.DAL.ProblemKendaraan_LapService](T3.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source], T3.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target])
    FROM (
        SELECT -- Constructing ProblemKendaraan_LapService_Source
            CreateRef(KendaraanContext.ProblemKendaraan, row(T2.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source.ProblemKendaraanID]), [ISOWebApps.DAL.ProblemKendaraan]) AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source], 
            T2.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target]
        FROM (
            SELECT -- Constructing ProblemKendaraan_LapService_Target
                T1.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source.ProblemKendaraanID], 
                CreateRef(KendaraanContext.LapServices, row(T1.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID]), [ISOWebApps.DAL.LapService]) AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target]
            FROM (
                SELECT 
                    T.ProblemKendaraanID AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source.ProblemKendaraanID], 
                    T.LapService_LapServiceID AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID], 
                    True AS _from0
                FROM CodeFirstDatabase.ProblemKendaraan AS T
                WHERE T.LapService_LapServiceID IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Section.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Section
        [CodeFirstDatabaseSchema.Section](T1.Section_ID, T1.Section_SectionDesc)
    FROM (
        SELECT 
            T.ID AS Section_ID, 
            T.SectionDesc AS Section_SectionDesc, 
            True AS _from0
        FROM KendaraanContext.Sections AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.Sections.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sections
        [ISOWebApps.DAL.Section](T1.Section_ID, T1.Section_SectionDesc)
    FROM (
        SELECT 
            T.ID AS Section_ID, 
            T.SectionDesc AS Section_SectionDesc, 
            True AS _from0
        FROM CodeFirstDatabase.Section AS T
    ) AS T1");
        }
    }
}
