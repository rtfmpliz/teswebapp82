//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(ISOWebApps.DAL.KendaraanContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsb8f96561a629a0c9a8a58010077150106a3ac02946f62d8e9992746910280bbe))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsb8f96561a629a0c9a8a58010077150106a3ac02946f62d8e9992746910280bbe : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "b8f96561a629a0c9a8a58010077150106a3ac02946f62d8e9992746910280bbe"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Kendaraan")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.LapService")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.ProblemKendaraan")
            {
                return GetView2();
            }

            if (extentName == "KendaraanContext.Kendaraans")
            {
                return GetView3();
            }

            if (extentName == "KendaraanContext.LapServices")
            {
                return GetView4();
            }

            if (extentName == "KendaraanContext.ProblemKendaraan")
            {
                return GetView5();
            }

            if (extentName == "KendaraanContext.ProblemKendaraan_LapService")
            {
                return GetView6();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Kendaraan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Kendaraan
        [CodeFirstDatabaseSchema.Kendaraan](T1.Kendaraan_ID, T1.Kendaraan_NoPol, T1.Kendaraan_TipeKendaraan)
    FROM (
        SELECT 
            T.ID AS Kendaraan_ID, 
            T.NoPol AS Kendaraan_NoPol, 
            T.TipeKendaraan AS Kendaraan_TipeKendaraan, 
            True AS _from0
        FROM KendaraanContext.Kendaraans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LapService.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LapService
        [CodeFirstDatabaseSchema.LapService](T1.LapService_LapServiceID, T1.LapService_KendaraanID, T1.LapService_Perkiraan, T1.LapService_Waktu, T1.LapService_Bengkel, T1.LapService_AlamatTelp, T1.LapService_Keterangan)
    FROM (
        SELECT 
            T.LapServiceID AS LapService_LapServiceID, 
            T.KendaraanID AS LapService_KendaraanID, 
            T.Perkiraan AS LapService_Perkiraan, 
            T.Waktu AS LapService_Waktu, 
            T.Bengkel AS LapService_Bengkel, 
            T.AlamatTelp AS LapService_AlamatTelp, 
            T.Keterangan AS LapService_Keterangan, 
            True AS _from0
        FROM KendaraanContext.LapServices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ProblemKendaraan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProblemKendaraan
        [CodeFirstDatabaseSchema.ProblemKendaraan](T3.ProblemKendaraan_ProblemKendaraanID, T3.ProblemKendaraan_Problem, T3.ProblemKendaraan_Status, T3.ProblemKendaraan_JadwalTunda, T3.ProblemKendaraan_TglDikerjakan, T3.ProblemKendaraan_Detail, T3.[ProblemKendaraan.LapService_LapServiceID])
    FROM (
        SELECT T1.ProblemKendaraan_ProblemKendaraanID, T1.ProblemKendaraan_Problem, T1.ProblemKendaraan_Status, T1.ProblemKendaraan_JadwalTunda, T1.ProblemKendaraan_TglDikerjakan, T1.ProblemKendaraan_Detail, T2.[ProblemKendaraan.LapService_LapServiceID], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.ProblemKendaraanID AS ProblemKendaraan_ProblemKendaraanID, 
                T.Problem AS ProblemKendaraan_Problem, 
                T.Status AS ProblemKendaraan_Status, 
                T.JadwalTunda AS ProblemKendaraan_JadwalTunda, 
                T.TglDikerjakan AS ProblemKendaraan_TglDikerjakan, 
                T.Detail AS ProblemKendaraan_Detail, 
                True AS _from0
            FROM KendaraanContext.ProblemKendaraan AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.ProblemKendaraan_LapService_Source).ProblemKendaraanID AS ProblemKendaraan_ProblemKendaraanID, 
                Key(T.ProblemKendaraan_LapService_Target).LapServiceID AS [ProblemKendaraan.LapService_LapServiceID], 
                True AS _from1
            FROM KendaraanContext.ProblemKendaraan_LapService AS T) AS T2
            ON T1.ProblemKendaraan_ProblemKendaraanID = T2.ProblemKendaraan_ProblemKendaraanID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.Kendaraans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Kendaraans
        [ISOWebApps.DAL.Kendaraan](T1.Kendaraan_ID, T1.Kendaraan_NoPol, T1.Kendaraan_TipeKendaraan)
    FROM (
        SELECT 
            T.ID AS Kendaraan_ID, 
            T.NoPol AS Kendaraan_NoPol, 
            T.TipeKendaraan AS Kendaraan_TipeKendaraan, 
            True AS _from0
        FROM CodeFirstDatabase.Kendaraan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.LapServices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LapServices
        [ISOWebApps.DAL.LapService](T1.LapService_LapServiceID, T1.LapService_KendaraanID, T1.LapService_Perkiraan, T1.LapService_Waktu, T1.LapService_Bengkel, T1.LapService_AlamatTelp, T1.LapService_Keterangan)
    FROM (
        SELECT 
            T.LapServiceID AS LapService_LapServiceID, 
            T.KendaraanID AS LapService_KendaraanID, 
            T.Perkiraan AS LapService_Perkiraan, 
            T.Waktu AS LapService_Waktu, 
            T.Bengkel AS LapService_Bengkel, 
            T.AlamatTelp AS LapService_AlamatTelp, 
            T.Keterangan AS LapService_Keterangan, 
            True AS _from0
        FROM CodeFirstDatabase.LapService AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.ProblemKendaraan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProblemKendaraan
        [ISOWebApps.DAL.ProblemKendaraan](T1.ProblemKendaraan_ProblemKendaraanID, T1.ProblemKendaraan_Problem, T1.ProblemKendaraan_Status, T1.ProblemKendaraan_JadwalTunda, T1.ProblemKendaraan_TglDikerjakan, T1.ProblemKendaraan_Detail) WITH 
        RELATIONSHIP(CREATEREF(KendaraanContext.LapServices, ROW(T1.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID]),[ISOWebApps.DAL.LapService]),[ISOWebApps.DAL.ProblemKendaraan_LapService],ProblemKendaraan_LapService_Source,ProblemKendaraan_LapService_Target) 
    FROM (
        SELECT 
            T.ProblemKendaraanID AS ProblemKendaraan_ProblemKendaraanID, 
            T.Problem AS ProblemKendaraan_Problem, 
            T.Status AS ProblemKendaraan_Status, 
            T.JadwalTunda AS ProblemKendaraan_JadwalTunda, 
            T.TglDikerjakan AS ProblemKendaraan_TglDikerjakan, 
            T.Detail AS ProblemKendaraan_Detail, 
            True AS _from0, 
            T.LapService_LapServiceID AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID]
        FROM CodeFirstDatabase.ProblemKendaraan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for KendaraanContext.ProblemKendaraan_LapService.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProblemKendaraan_LapService
        [ISOWebApps.DAL.ProblemKendaraan_LapService](T3.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source], T3.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target])
    FROM (
        SELECT -- Constructing ProblemKendaraan_LapService_Source
            CreateRef(KendaraanContext.ProblemKendaraan, row(T2.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source.ProblemKendaraanID]), [ISOWebApps.DAL.ProblemKendaraan]) AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source], 
            T2.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target]
        FROM (
            SELECT -- Constructing ProblemKendaraan_LapService_Target
                T1.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source.ProblemKendaraanID], 
                CreateRef(KendaraanContext.LapServices, row(T1.[ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID]), [ISOWebApps.DAL.LapService]) AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target]
            FROM (
                SELECT 
                    T.ProblemKendaraanID AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Source.ProblemKendaraanID], 
                    T.LapService_LapServiceID AS [ProblemKendaraan_LapService.ProblemKendaraan_LapService_Target.LapServiceID], 
                    True AS _from0
                FROM CodeFirstDatabase.ProblemKendaraan AS T
                WHERE T.LapService_LapServiceID IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
